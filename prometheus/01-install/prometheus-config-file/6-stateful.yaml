apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: kube-system
  labels:
    k8s-app: prometheus
    kubernetes.io/cluster-service: "true"
spec:
  serviceName: "prometheus"
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      k8s-app: prometheus
  template:
    metadata:
      labels:
        k8s-app: prometheus
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                      - prometheus
              topologyKey: "kubernetes.io/hostname"
      priorityClassName: system-cluster-critical
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: init-permissions
          image: my.harbor.cn/k8sstudy/busybox:1.37.0
          command: [ "sh", "-c", "chown -R 1000:1000 /prometheus" ]
          volumeMounts:
            - mountPath: "/prometheus"
              name: prometheus-data
      containers:
        - name: prometheus-server-configmap-reload
          image: my.harbor.cn/k8sstudy/configmap-reload:v0.9.0
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:8091/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
          resources:
            limits:
              cpu: 10m
              memory: 10Mi
            requests:
              cpu: 10m
              memory: 10Mi
        - name: prometheus
          imagePullPolicy: IfNotPresent
          image: my.harbor.cn/k8sstudy/prometheus:v3.1.0
          command:
            - "/bin/prometheus"
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
#            - "--storage.tsdb.retention=24h"
#            - "--web.console.libraries=/etc/prometheus/console_libraries"
#            - "--web.console.templates=/etc/prometheus/consoles"
            - "--web.enable-lifecycle"
            - "--web.listen-address=0.0.0.0:8091"
          ports:
            - containerPort: 8091
              protocol: TCP
          volumeMounts:
            - mountPath: "/prometheus"
              name: prometheus-data
            - mountPath: "/etc/prometheus/"
              name: config-volume
            - mountPath: "/etc/prometheus/secrets/etcd-certs"
              name: secret-volume
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 8091
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/ready
              port: 8091
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 2500Mi
          securityContext:
            runAsUser: 1000  # 使用非 root 用户
            runAsGroup: 1000
#            runAsNonRoot: false
#            privileged: true
      serviceAccountName: prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: secret-volume
          secret:
            secretName: etcd-certs
  volumeClaimTemplates:
    - metadata:
        name: prometheus-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "prometheus-local-pv"
        resources:
          requests:
            storage: 10Gi
